workspace_root: &workspace_root
  /go/src/github.com/gruntwork-io/terragrunt

defaults: &defaults
  working_directory: *workspace_root
  docker:
  - image: gruntwork/circle-ci-test-image-base

version: 2
jobs:
  install_dependencies:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: *workspace_root
    - restore_cache:
        keys:
        - dep-{{ checksum "Gopkg.lock" }}
    - run: dep ensure
    - run: gruntwork-install --binary-name 'terratest_log_parser' --repo 'https://github.com/gruntwork-io/terratest' --tag 'v0.13.8' --download-dir .
    - save_cache:
        key: dep-{{ checksum "Gopkg.lock" }}
        paths:
        - /go/src/github.com/gruntwork-io/terragrunt/vendor
    - persist_to_workspace:
        root: *workspace_root
        paths: vendor

  build:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: *workspace_root
    - run: build-go-binaries --circle-ci-2 --app-name terragrunt --dest-path bin --ld-flags "-X main.VERSION=$CIRCLE_TAG"
    - persist_to_workspace:
        root: *workspace_root
        paths: bin

  deploy:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: *workspace_root
    - run: cd bin && sha256sum * > SHA256SUMS
    - run: upload-github-release-assets --github-repo-name terragrunt-binaries bin/*

workflows:
  version: 2
  build-and-test:
    jobs:
    - install_dependencies:
        filters:
          tags:
            only: /^v.*/
          branches:
            only:
              - /^v.*/
    - build:
        requires:
        - install_dependencies
        filters:
          tags:
            only: /^v.*/
          branches:
            only:
              - /^v.*/

    - deploy:
        requires:
        - build
        filters:
          tags:
            only: /^v.*/
          branches:
            only:
              - /^v.*/

  nightly:
    triggers:
    - schedule:
        cron: "0 6 * * *"
        filters:
          branches:
            only: master
    jobs:
    - install_dependencies
    - unit_test:
        requires:
          - install_dependencies
    - integration_test:
        requires:
          - unit_test
